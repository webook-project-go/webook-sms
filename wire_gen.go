// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/webook-project-go/webook-sms/grpc"
	"github.com/webook-project-go/webook-sms/ioc"
	"github.com/webook-project-go/webook-sms/repository"
	"github.com/webook-project-go/webook-sms/repository/cache"
	"github.com/webook-project-go/webook-sms/service"
	"github.com/webook-project-go/webook-sms/service/provider"
)

// Injectors from wire.go:

func InitApp() *App {
	client := ioc.InitEtcd()
	grpcxServer := ioc.InitGrpcServer(client)
	smsService := provider.NewSMSMemory()
	cmdable := ioc.InitRedis()
	codeCache := cache.NewCodeCache(cmdable)
	codeRepository := repository.NewCodeRepository(codeCache)
	codeService := service.NewCodeService(smsService, codeRepository)
	grpcService := grpc.New(smsService, codeService)
	app := &App{
		Server:  grpcxServer,
		Service: grpcService,
	}
	return app
}

// wire.go:

var thirdPartyProvider = wire.NewSet(ioc.InitRedis, ioc.InitGrpcServer, ioc.InitEtcd)

var serviceSet = wire.NewSet(provider.NewSMSMemory, service.NewCodeService, repository.NewCodeRepository, cache.NewCodeCache)
